programa errores
    entero valor;
    entero[10] valores;
    booleano bool;
---------------------------------------------------------------
-- declaración variables globales

---------------------------------------------------------------
-- declaración procedimientos y funciones

-- no debería dar error: se usa variable n no inicializada manualmente
prueba_varNoInicializada()
    entero n;
principio
    escribir_lin(n);
fin

-- error: tipos incompatibles
prueba_tiposIncompatibles(entero e; booleano b)
principio
    
    -- ! incompatible con entero
    e := !e;
    e := !5;

    -- - incompatible con booleano
    b := -b;
    b := -verdadero;

    -- + incompatible con booleano
    b := +b;
    b := +verdadero;

    -- tipos incompatibles
    e := e + b;
    e := e - b;
    e := e / b;
    e := e * b;
    e := e mod b;

    -- aunque los tipos sean compatibles, se necesitan enteros
    -- con operadores de enteros
    e := b + b;
    b := b + b;

    -- tipos incompatibles en asignación
    e := b;
    b := e;

    -- tipos incompatibles en relaciones y expresiones
    mq e<b
        nada;
    fmq

    mq e>verdadero
        nada;
    fmq

    mq b & e
        nada;
    fmq

    mq b | 1
        nada;
    fmq

    mq b = e
        nada;
    fmq

    mq e <> b
        nada;
    fmq
fin

-- error: array con un número de componentes que no es un entero positivo
prueba_arrayMalDefinida()
    entero[0] w1;
    caracter[-1] w1;
principio
    nada;
fin

-- función auxiliar para calcular el mínimo de dos enteros
entero min(entero a, b)
principio
    sel
        caso a < b:
            min := a;
        dlc:
            min := b;
    fsel
fin

--procedimiento auxiliar que pone en una variable el máximo de dos enteros
max(entero a, b; entero ref res)
principio
    sel
        caso a > b:
            res := a;
        dlc:
            res := b;
    fsel
fin

---------------------------------------------------------------
-- main

principio
    prueba_varNoInicializada();
    prueba_tiposIncompatibles();
    prueba_arrayMalDefinida();

    -- error: número de parámetros insuficiente
    valor := min();
    valor := min(1);
    max(1);

    -- error: no se pasan parámetros del tipo correcto
    valor := min(1, verdadero);
    valor := min('a', 1);
    valor := min(1, "hola, mundo");
    max(1, valores, valor);
    max(1, falso, valor);

    -- error: función o procedimiento con un parámetro por referencia
    -- no recibe una variable max(entero, entero, ref entero)
    max(1, 2, 0);
    max(1, 2, 'c');
    max(1, 2, falso);
    max(1, 2, bool);        -- es una variable pero de tipo incompatible
    max(1, 2, valor);       -- está debería funcionar
    max(1, 2, valores[1]);  -- está debería funcionar
fin
